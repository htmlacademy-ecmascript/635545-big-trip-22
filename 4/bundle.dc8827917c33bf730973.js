(()=>{var __webpack_modules__={611:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n;// CONCATENATED MODULE: ./src/render.js\nconst RenderPosition = {\n  BEFOREBEGIN: \'beforebegin\',\n  AFTERBEGIN: \'afterbegin\',\n  BEFOREEND: \'beforeend\',\n  AFTEREND: \'afterend\'\n};\nfunction createElement(template) {\n  const newElement = document.createElement(\'div\');\n  newElement.innerHTML = template;\n  return newElement.firstElementChild;\n}\nfunction render(component, container, place = RenderPosition.BEFOREEND) {\n  container.insertAdjacentElement(place, component.getElement());\n}\n\n;// CONCATENATED MODULE: ./src/view/sort.js\n\nfunction createSortTemplate() {\n  return `<form class="trip-events__trip-sort  trip-sort" action="#" method="get">\n      <div class="trip-sort__item  trip-sort__item--day">\n        <input id="sort-day" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-day" checked>\n        <label class="trip-sort__btn" for="sort-day">Day</label>\n      </div>\n\n      <div class="trip-sort__item  trip-sort__item--event">\n        <input id="sort-event" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-event" disabled>\n        <label class="trip-sort__btn" for="sort-event">Event</label>\n      </div>\n\n      <div class="trip-sort__item  trip-sort__item--time">\n        <input id="sort-time" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-time">\n        <label class="trip-sort__btn" for="sort-time">Time</label>\n      </div>\n\n      <div class="trip-sort__item  trip-sort__item--price">\n        <input id="sort-price" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-price">\n        <label class="trip-sort__btn" for="sort-price">Price</label>\n      </div>\n\n      <div class="trip-sort__item  trip-sort__item--offer">\n        <input id="sort-offer" class="trip-sort__input  visually-hidden" type="radio" name="trip-sort" value="sort-offer" disabled>\n        <label class="trip-sort__btn" for="sort-offer">Offers</label>\n      </div>\n    </form>`;\n}\nclass SortView {\n  getTemplate() {\n    return createSortTemplate();\n  }\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n  removeElement() {\n    this.element = null;\n  }\n}\n;// CONCATENATED MODULE: ./src/view/trip-events-list.js\n\nfunction createTripEventsListTemplate() {\n  return \'<ul class="trip-events__list"></ul>\';\n}\nclass TripEventsListView {\n  getTemplate() {\n    return createTripEventsListTemplate();\n  }\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n  removeElement() {\n    this.element = null;\n  }\n}\n// EXTERNAL MODULE: ./node_modules/dayjs/dayjs.min.js\nvar dayjs_min = __webpack_require__(484);\nvar dayjs_min_default = /*#__PURE__*/__webpack_require__.n(dayjs_min);\n;// CONCATENATED MODULE: ./src/utils.js\n\nfunction getRandomArrayElement(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\nfunction humanizeTaskDueDate(dueDate, dateFormat) {\n  return dueDate ? dayjs_min_default()(dueDate).format(dateFormat) : \'\';\n}\nfunction dateDif(date1, date2, format) {\n  return dayjs_min_default()(date1).diff(dayjs_min_default()(date2), format);\n}\n\n;// CONCATENATED MODULE: ./src/const.js\nconst POINT_TYPE = [\'taxi\', \'bus\', \'train\', \'ship\', \'drive\', \'flight\', \'check-in\', \'sightseeing\', \'restaurant\'];\nconst CITY = (/* unused pure expression or super */ null && ([\'Minsk\', \'Volzhskiy\', \'Moscow\', \'St. Petersburg\', \'Biysk\', \'Grodno\']));\nconst NATURAL_NUMBERS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\nconst DATE_FORMAT_DAY_MONTH = \'DD MMM\';\nconst DATE_FORMAT_YEAR_DAY_MONTH = \'YYYY-MM-DD\';\nconst DATE_FORMAT_HOURS_MINUTE = \'HH:mm\';\nconst DATE_FORMAT_YEAR_DAY_MONTH_HOURS_MINUTE = \'DD/MM/YY HH:mm\';\n\n;// CONCATENATED MODULE: ./src/view/trip-events-item.js\n\n\n\nfunction createTripEventsItemTemplate(points) {\n  const {\n    basePrice,\n    dateFrom,\n    dateTo\n  } = points;\n  const dateStartDayMonth = humanizeTaskDueDate(dateFrom, DATE_FORMAT_DAY_MONTH);\n  const dateStartDatetime = humanizeTaskDueDate(dateFrom, DATE_FORMAT_YEAR_DAY_MONTH);\n  const dateStartHoursMinute = humanizeTaskDueDate(dateFrom, DATE_FORMAT_HOURS_MINUTE);\n  const dateEndHoursMinute = humanizeTaskDueDate(dateTo, DATE_FORMAT_HOURS_MINUTE);\n  return `<li class="trip-events__item">\n      <div class="event">\n        <time class="event__date" datetime="${dateStartDatetime}">${dateStartDayMonth}</time>\n        <div class="event__type">\n          <img class="event__type-icon" width="42" height="42" src="img/icons/taxi.png" alt="Event type icon">\n        </div>\n        <h3 class="event__title">Taxi Amsterdam</h3>\n        <div class="event__schedule">\n          <p class="event__time">\n            <time class="event__start-time" datetime="2019-03-18T10:30">${dateStartHoursMinute}</time>\n            &mdash;\n            <time class="event__end-time" datetime="2019-03-18T11:00">${dateEndHoursMinute}</time>\n          </p>\n          <p class="event__duration">${dateDif(dateTo, dateFrom, \'minute\')}M</p>\n        </div>\n        <p class="event__price">\n          &euro;&nbsp;<span class="event__price-value">${basePrice}</span>\n        </p>\n        <h4 class="visually-hidden">Offers:</h4>\n        <ul class="event__selected-offers">\n          <li class="event__offer">\n            <span class="event__offer-title">Order Uber</span>\n            &plus;&euro;&nbsp;\n            <span class="event__offer-price">20</span>\n          </li>\n        </ul>\n        <button class="event__favorite-btn event__favorite-btn--active" type="button">\n          <span class="visually-hidden">Add to favorite</span>\n          <svg class="event__favorite-icon" width="28" height="28" viewBox="0 0 28 28">\n            <path d="M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z"/>\n          </svg>\n        </button>\n        <button class="event__rollup-btn" type="button">\n          <span class="visually-hidden">Open event</span>\n        </button>\n      </div>\n    </li>`;\n}\nclass TripEventsItemView {\n  constructor({\n    points\n  }) {\n    this.points = points;\n  }\n  getTemplate() {\n    return createTripEventsItemTemplate(this.points);\n  }\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n  removeElement() {\n    this.element = null;\n  }\n}\n;// CONCATENATED MODULE: ./src/view/new-point.js\n\n\n\nfunction createNewPointTemplate(editPoint) {\n  const {\n    dateFrom,\n    dateTo,\n    name,\n    description,\n    type,\n    offers,\n    pictures\n  } = editPoint;\n  const dateStart = humanizeTaskDueDate(dateFrom, DATE_FORMAT_YEAR_DAY_MONTH_HOURS_MINUTE);\n  const dateEnd = humanizeTaskDueDate(dateTo, DATE_FORMAT_YEAR_DAY_MONTH_HOURS_MINUTE);\n  function eventPhotoTemplate(src, title) {\n    return `\n      <img class="event__photo" src="${src}" alt="${title}">\n    `;\n  }\n  function eventPhotoListTemplate() {\n    let result = \'\';\n    if (pictures.length > 0) {\n      result = pictures.reduce((sum, current) => sum + eventPhotoTemplate(current.src, current.description), \'\');\n    }\n    return result;\n  }\n  function selectorItemTemplate(title, price) {\n    return `\n      <div class="event__offer-selector">\n        <input class="event__offer-checkbox  visually-hidden" id="event-offer-luggage-1" type="checkbox" name="event-offer-luggage" checked>\n        <label class="event__offer-label" for="event-offer-luggage-1">\n          <span class="event__offer-title">${title}</span>\n          &plus;&euro;&nbsp;\n          <span class="event__offer-price">${price}</span>\n        </label>\n      </div>\n    `;\n  }\n  function selectorListTemplate() {\n    return offers.reduce((sum, current) => sum + selectorItemTemplate(current.title, current.price), \'\');\n  }\n  return `<li class="trip-events__item">\n      <form class="event event--edit" action="#" method="post">\n        <header class="event__header">\n          <div class="event__type-wrapper">\n            <label class="event__type  event__type-btn" for="event-type-toggle-1">\n              <span class="visually-hidden">Choose event type</span>\n              <img class="event__type-icon" width="17" height="17" src="img/icons/flight.png" alt="Event type icon">\n            </label>\n            <input class="event__type-toggle  visually-hidden" id="event-type-toggle-1" type="checkbox">\n\n            <div class="event__type-list">\n              <fieldset class="event__type-group">\n                <legend class="visually-hidden">Event type</legend>\n\n                <div class="event__type-item">\n                  <input id="event-type-taxi-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="taxi">\n                  <label class="event__type-label  event__type-label--taxi" for="event-type-taxi-1">Taxi</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-bus-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="bus">\n                  <label class="event__type-label  event__type-label--bus" for="event-type-bus-1">Bus</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-train-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="train">\n                  <label class="event__type-label  event__type-label--train" for="event-type-train-1">Train</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-ship-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="ship">\n                  <label class="event__type-label  event__type-label--ship" for="event-type-ship-1">Ship</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-drive-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="drive">\n                  <label class="event__type-label  event__type-label--drive" for="event-type-drive-1">Drive</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-flight-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="flight" checked>\n                  <label class="event__type-label  event__type-label--flight" for="event-type-flight-1">Flight</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-check-in-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="check-in">\n                  <label class="event__type-label  event__type-label--check-in" for="event-type-check-in-1">Check-in</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-sightseeing-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="sightseeing">\n                  <label class="event__type-label  event__type-label--sightseeing" for="event-type-sightseeing-1">Sightseeing</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-restaurant-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="restaurant">\n                  <label class="event__type-label  event__type-label--restaurant" for="event-type-restaurant-1">Restaurant</label>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n\n          <div class="event__field-group  event__field-group--destination">\n            <label class="event__label  event__type-output" for="event-destination-1">\n              ${type}\n            </label>\n            <input class="event__input  event__input--destination" id="event-destination-1" type="text" name="event-destination" value="${name}" list="destination-list-1">\n            <datalist id="destination-list-1">\n              <option value="Amsterdam"></option>\n              <option value="Geneva"></option>\n              <option value="Chamonix"></option>\n            </datalist>\n          </div>\n\n          <div class="event__field-group  event__field-group--time">\n            <label class="visually-hidden" for="event-start-time-1">From</label>\n            <input class="event__input  event__input--time" id="event-start-time-1" type="text" name="event-start-time" value="${dateStart}">\n            &mdash;\n            <label class="visually-hidden" for="event-end-time-1">To</label>\n            <input class="event__input  event__input--time" id="event-end-time-1" type="text" name="event-end-time" value="${dateEnd}">\n          </div>\n\n          <div class="event__field-group  event__field-group--price">\n            <label class="event__label" for="event-price-1">\n              <span class="visually-hidden">Price</span>\n              &euro;\n            </label>\n            <input class="event__input  event__input--price" id="event-price-1" type="text" name="event-price" value="">\n          </div>\n\n          <button class="event__save-btn  btn  btn--blue" type="submit">Save</button>\n          <button class="event__reset-btn" type="reset">Cancel</button>\n        </header>\n        <section class="event__details">\n          <section class="event__section  event__section--offers">\n            <h3 class="event__section-title  event__section-title--offers">Offers</h3>\n\n            <div class="event__available-offers">\n              ${selectorListTemplate()}\n            </div>\n          </section>\n\n          <section class="event__section  event__section--destination">\n            <h3 class="event__section-title  event__section-title--destination">Destination</h3>\n            <p class="event__destination-description">${description}</p>\n\n            <div class="event__photos-container">\n              <div class="event__photos-tape">\n                ${eventPhotoListTemplate()}\n              </div>\n            </div>\n          </section>\n        </section>\n      </form>\n    </li>`;\n}\nclass NewPointView {\n  constructor({\n    editPoint\n  }) {\n    this.editPoint = editPoint;\n  }\n  getTemplate() {\n    return createNewPointTemplate(this.editPoint);\n  }\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n  removeElement() {\n    this.element = null;\n  }\n}\n;// CONCATENATED MODULE: ./src/view/edit-point.js\n\n\n\nfunction createEditPointTemplate(editPoint) {\n  const {\n    basePrice,\n    dateFrom,\n    dateTo,\n    name,\n    description,\n    type,\n    offers\n  } = editPoint;\n  const dateStart = humanizeTaskDueDate(dateFrom, DATE_FORMAT_YEAR_DAY_MONTH_HOURS_MINUTE);\n  const dateEnd = humanizeTaskDueDate(dateTo, DATE_FORMAT_YEAR_DAY_MONTH_HOURS_MINUTE);\n  function selectorItemTemplate(title, price) {\n    return `\n      <div class="event__offer-selector">\n        <input class="event__offer-checkbox  visually-hidden" id="event-offer-luggage-1" type="checkbox" name="event-offer-luggage" checked>\n        <label class="event__offer-label" for="event-offer-luggage-1">\n          <span class="event__offer-title">${title}</span>\n          &plus;&euro;&nbsp;\n          <span class="event__offer-price">${price}</span>\n        </label>\n      </div>\n    `;\n  }\n  function selectorListTemplate() {\n    return offers.reduce((sum, current) => sum + selectorItemTemplate(current.title, current.price), \'\');\n  }\n  return `<li class="trip-events__item">\n      <form class="event event--edit" action="#" method="post">\n        <header class="event__header">\n          <div class="event__type-wrapper">\n            <label class="event__type  event__type-btn" for="event-type-toggle-1">\n              <span class="visually-hidden">Choose event type</span>\n              <img class="event__type-icon" width="17" height="17" src="img/icons/flight.png" alt="Event type icon">\n            </label>\n            <input class="event__type-toggle  visually-hidden" id="event-type-toggle-1" type="checkbox">\n\n            <div class="event__type-list">\n              <fieldset class="event__type-group">\n                <legend class="visually-hidden">Event type</legend>\n\n                <div class="event__type-item">\n                  <input id="event-type-taxi-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="taxi">\n                  <label class="event__type-label  event__type-label--taxi" for="event-type-taxi-1">Taxi</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-bus-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="bus">\n                  <label class="event__type-label  event__type-label--bus" for="event-type-bus-1">Bus</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-train-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="train">\n                  <label class="event__type-label  event__type-label--train" for="event-type-train-1">Train</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-ship-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="ship">\n                  <label class="event__type-label  event__type-label--ship" for="event-type-ship-1">Ship</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-drive-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="drive">\n                  <label class="event__type-label  event__type-label--drive" for="event-type-drive-1">Drive</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-flight-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="flight" checked>\n                  <label class="event__type-label  event__type-label--flight" for="event-type-flight-1">Flight</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-check-in-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="check-in">\n                  <label class="event__type-label  event__type-label--check-in" for="event-type-check-in-1">Check-in</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-sightseeing-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="sightseeing">\n                  <label class="event__type-label  event__type-label--sightseeing" for="event-type-sightseeing-1">Sightseeing</label>\n                </div>\n\n                <div class="event__type-item">\n                  <input id="event-type-restaurant-1" class="event__type-input  visually-hidden" type="radio" name="event-type" value="restaurant">\n                  <label class="event__type-label  event__type-label--restaurant" for="event-type-restaurant-1">Restaurant</label>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n\n          <div class="event__field-group  event__field-group--destination">\n            <label class="event__label  event__type-output" for="event-destination-1">\n              ${type}\n            </label>\n            <input class="event__input  event__input--destination" id="event-destination-1" type="text" name="event-destination" value="${name}" list="destination-list-1">\n            <datalist id="destination-list-1">\n              <option value="Amsterdam"></option>\n              <option value="Geneva"></option>\n              <option value="Chamonix"></option>\n            </datalist>\n          </div>\n\n          <div class="event__field-group  event__field-group--time">\n            <label class="visually-hidden" for="event-start-time-1">From</label>\n            <input class="event__input  event__input--time" id="event-start-time-1" type="text" name="event-start-time" value="${dateStart}">\n            &mdash;\n            <label class="visually-hidden" for="event-end-time-1">To</label>\n            <input class="event__input  event__input--time" id="event-end-time-1" type="text" name="event-end-time" value="${dateEnd}">\n          </div>\n\n          <div class="event__field-group  event__field-group--price">\n            <label class="event__label" for="event-price-1">\n              <span class="visually-hidden">Price</span>\n              &euro;\n            </label>\n            <input class="event__input  event__input--price" id="event-price-1" type="text" name="event-price" value="${basePrice}">\n          </div>\n\n          <button class="event__save-btn  btn  btn--blue" type="submit">Save</button>\n          <button class="event__reset-btn" type="reset">Delete</button>\n          <button class="event__rollup-btn" type="button">\n            <span class="visually-hidden">Open event</span>\n          </button>\n        </header>\n        <section class="event__details">\n          <section class="event__section  event__section--offers">\n            <h3 class="event__section-title  event__section-title--offers">Offers</h3>\n\n            <div class="event__available-offers">\n              ${selectorListTemplate()}\n            </div>\n          </section>\n\n          <section class="event__section  event__section--destination">\n            <h3 class="event__section-title  event__section-title--destination">Destination</h3>\n            <p class="event__destination-description">${description}</p>\n          </section>\n        </section>\n      </form>\n    </li>`;\n}\nclass EditPointView {\n  constructor({\n    editPoint\n  }) {\n    this.editPoint = editPoint;\n  }\n  getTemplate() {\n    return createEditPointTemplate(this.editPoint);\n  }\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n  removeElement() {\n    this.element = null;\n  }\n}\n;// CONCATENATED MODULE: ./src/presenter/events-presenter.js\n\n\n\n\n\n\nclass EventsPresenter {\n  sortComponent = new SortView();\n  tripEventsListComponent = new TripEventsListView();\n  constructor({\n    container,\n    eventPointsModel,\n    editPointModel,\n    destinationModel,\n    offersModel\n  }) {\n    this.container = container;\n    this.eventPointsModel = eventPointsModel;\n    this.editPointModel = editPointModel;\n    this.destinationModel = destinationModel;\n    this.offersModel = offersModel;\n  }\n  init() {\n    this.eventPoints = [...this.eventPointsModel.get()];\n    this.editPoint = this.editPointModel.get()[0];\n    this.destination = this.destinationModel.getById(this.editPoint.destination);\n    this.offer = this.offersModel.getByType(this.editPoint.type);\n    this.offers = this.offer.offers;\n    this.editPoint.description = this.destination.description;\n    this.editPoint.name = this.destination.name;\n    this.editPoint.pictures = this.destination.pictures;\n    this.editPoint.offers = this.offers;\n    render(this.sortComponent, this.container);\n    render(this.tripEventsListComponent, this.container);\n    render(new EditPointView({\n      editPoint: this.editPoint\n    }), this.tripEventsListComponent.getElement());\n    render(new NewPointView({\n      editPoint: this.editPoint\n    }), this.tripEventsListComponent.getElement());\n    for (let i = 0; i < this.eventPoints.length; i++) {\n      render(new TripEventsItemView({\n        points: this.eventPoints[i]\n      }), this.tripEventsListComponent.getElement());\n    }\n  }\n}\n;// CONCATENATED MODULE: ./src/view/filters.js\n\nfunction createFiltersTemplate() {\n  return `<form class="trip-filters" action="#" method="get">\n      <div class="trip-filters__filter">\n        <input id="filter-everything" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="everything" checked>\n        <label class="trip-filters__filter-label" for="filter-everything">Everything</label>\n      </div>\n      <div class="trip-filters__filter">\n        <input id="filter-future" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="future">\n        <label class="trip-filters__filter-label" for="filter-future">Future</label>\n      </div>\n      <div class="trip-filters__filter">\n        <input id="filter-present" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="present">\n        <label class="trip-filters__filter-label" for="filter-present">Present</label>\n      </div>\n      <div class="trip-filters__filter">\n        <input id="filter-past" class="trip-filters__filter-input  visually-hidden" type="radio" name="trip-filter" value="past">\n        <label class="trip-filters__filter-label" for="filter-past">Past</label>\n      </div>\n      <button class="visually-hidden" type="submit">Accept filter</button>\n    </form>`;\n}\nclass FiltersView {\n  getTemplate() {\n    return createFiltersTemplate();\n  }\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n  removeElement() {\n    this.element = null;\n  }\n}\n;// CONCATENATED MODULE: ./src/presenter/filters-presenter.js\n\n\nclass FiltersPresenter {\n  filterComponent = new FiltersView();\n  constructor({\n    container\n  }) {\n    this.container = container;\n  }\n  init() {\n    render(this.filterComponent, this.container);\n  }\n}\n;// CONCATENATED MODULE: ./src/view/header-info.js\n\nfunction createHeaderInfoTemplate() {\n  return `<section class="trip-main__trip-info  trip-info">\n      <div class="trip-info__main">\n        <h1 class="trip-info__title">Amsterdam &mdash; Chamonix &mdash; Geneva</h1>\n        <p class="trip-info__dates">18&nbsp;&mdash;&nbsp;20 Mar</p>\n      </div>\n      <p class="trip-info__cost">\n        Total: &euro;&nbsp;<span class="trip-info__cost-value">1230</span>\n      </p>\n    </section>`;\n}\nclass HeaderInfoView {\n  getTemplate() {\n    return createHeaderInfoTemplate();\n  }\n  getElement() {\n    if (!this.element) {\n      this.element = createElement(this.getTemplate());\n    }\n    return this.element;\n  }\n  removeElement() {\n    this.element = null;\n  }\n}\n;// CONCATENATED MODULE: ./src/presenter/header-info-presenter.js\n\n\nclass HeaderInfoPresenter {\n  headerInfoComponent = new HeaderInfoView();\n  constructor({\n    container,\n    place\n  }) {\n    this.container = container;\n    this.place = place;\n  }\n  init() {\n    render(this.headerInfoComponent, this.container, this.place);\n  }\n}\n;// CONCATENATED MODULE: ./src/mock/event-points.js\n\n\nconst eventPointsMock = [{\n  id: \'1\',\n  basePrice: 100,\n  dateFrom: \'2019-07-10T22:33:56.845Z\',\n  dateTo: \'2019-07-11T07:22:13.375Z\',\n  destination: \'4\',\n  isFavorite: false,\n  offers: [\'10\', \'11\', \'12\'],\n  type: `${getRandomArrayElement(POINT_TYPE)}`\n}, {\n  id: \'2\',\n  basePrice: 200,\n  dateFrom: \'2019-07-10T11:55:56.845Z\',\n  dateTo: \'2019-07-11T12:22:13.375Z\',\n  destination: \'5\',\n  isFavorite: false,\n  offers: [\'11\', \'12\'],\n  type: `${getRandomArrayElement(POINT_TYPE)}`\n}, {\n  id: \'3\',\n  basePrice: 300,\n  dateFrom: \'2019-07-10T22:55:56.845Z\',\n  dateTo: \'2019-07-11T21:22:13.375Z\',\n  destination: \'6\',\n  isFavorite: false,\n  offers: [\'10\', \'12\'],\n  type: `${getRandomArrayElement(POINT_TYPE)}`\n}];\nfunction getRandomEventPointsMock() {\n  return getRandomArrayElement(eventPointsMock);\n}\n\n;// CONCATENATED MODULE: ./src/model/event-points-model.js\n\nconst POINT_COUNT = 3;\nclass EventPointsModel {\n  #eventPoints = [];\n  constructor() {\n    this.#eventPoints = Array.from({\n      length: POINT_COUNT\n    }, getRandomEventPointsMock);\n  }\n  get() {\n    return this.#eventPoints;\n  }\n  getById(id) {\n    return this.#eventPoints.find(eventPoints => eventPoints.id === id) || null;\n  }\n}\n;// CONCATENATED MODULE: ./src/model/edit-point-model.js\n\nconst edit_point_model_POINT_COUNT = 1;\nclass EditPointModel {\n  #editPoint = [];\n  constructor() {\n    this.#editPoint = Array.from({\n      length: edit_point_model_POINT_COUNT\n    }, getRandomEventPointsMock);\n  }\n  get() {\n    return this.#editPoint;\n  }\n  getById(id) {\n    return this.#editPoint.find(editPoint => editPoint.id === id) || null;\n  }\n}\n;// CONCATENATED MODULE: ./src/mock/destination.js\n\n\nconst destinationMock = [{\n  id: \'4\',\n  description: \'Minsk, is a beautiful city\',\n  name: \'Minsk\',\n  pictures: [{\n    src: `https://loremflickr.com/248/152?random=${getRandomArrayElement(NATURAL_NUMBERS)}`,\n    description: \'random-img\'\n  }, {\n    src: `https://loremflickr.com/248/152?random=${getRandomArrayElement(NATURAL_NUMBERS)}`,\n    description: \'random-img\'\n  }]\n}, {\n  id: \'5\',\n  description: \'Volzhskiy, is a beautiful city.\',\n  name: \'Volzhskiy\',\n  pictures: [{\n    src: `https://loremflickr.com/248/152?random=${getRandomArrayElement(NATURAL_NUMBERS)}`,\n    description: \'random-img\'\n  }]\n}, {\n  id: \'6\',\n  description: \'Moscow, is a beautiful city.\',\n  name: \'Moscow\',\n  pictures: []\n}, {\n  id: \'7\',\n  description: \'St. Petersburg, is a beautiful city.\',\n  name: \'St. Petersburg\',\n  pictures: [{\n    src: `https://loremflickr.com/248/152?random=${getRandomArrayElement(NATURAL_NUMBERS)}`,\n    description: \'random-img\'\n  }]\n}, {\n  id: \'8\',\n  description: \'Biysk, is a beautiful city.\',\n  name: \'Biysk\',\n  pictures: [{\n    src: `https://loremflickr.com/248/152?random=${getRandomArrayElement(NATURAL_NUMBERS)}`,\n    description: \'random-img\'\n  }]\n}, {\n  id: \'9\',\n  description: \'Grodno, is a beautiful city.\',\n  name: \'Grodno\',\n  pictures: [{\n    src: `https://loremflickr.com/248/152?random=${getRandomArrayElement(NATURAL_NUMBERS)}`,\n    description: \'random-img\'\n  }]\n}];\n\n;// CONCATENATED MODULE: ./src/model/destination-model.js\n\n\n// const POINT_COUNT = 1;\n\nclass DestinationModel {\n  #destinations = [];\n  constructor() {\n    this.#destinations = destinationMock;\n  }\n  get() {\n    return this.#destinations;\n  }\n  getById(id) {\n    return this.#destinations.find(destinations => destinations.id === id) || null;\n  }\n}\n;// CONCATENATED MODULE: ./src/mock/offers.js\nconst offersMock = [{\n  type: \'taxi\',\n  offers: [{\n    id: \'10\',\n    title: \'Upgrade to a business class\',\n    price: 123\n  }, {\n    id: \'11\',\n    title: \'Upgrade to a business class\',\n    price: 234\n  }, {\n    id: \'12\',\n    title: \'Upgrade to a business class\',\n    price: 34546\n  }]\n}, {\n  type: \'bus\',\n  offers: [{\n    id: \'10\',\n    title: \'Upgrade to a business class\',\n    price: 5675\n  }]\n}, {\n  type: \'train\',\n  offers: [{\n    id: \'10\',\n    title: \'Upgrade to a business class\',\n    price: 246\n  }]\n}, {\n  type: \'ship\',\n  offers: [{\n    id: \'10\',\n    title: \'Upgrade to a business class\',\n    price: 354\n  }]\n}, {\n  type: \'drive\',\n  offers: [{\n    id: \'11\',\n    title: \'Upgrade to a business class\',\n    price: 4574\n  }, {\n    id: \'12\',\n    title: \'Upgrade to a business class\',\n    price: 353\n  }]\n}, {\n  type: \'flight\',\n  offers: [{\n    id: \'12\',\n    title: \'Upgrade to a business class\',\n    price: 3434\n  }]\n}, {\n  type: \'check-in\',\n  offers: [{\n    id: \'10\',\n    title: \'Upgrade to a business class\',\n    price: 345\n  }, {\n    id: \'12\',\n    title: \'Upgrade to a business class\',\n    price: 6546\n  }]\n}, {\n  type: \'sightseeing\',\n  offers: [{\n    id: \'12\',\n    title: \'Upgrade to a business class\',\n    price: 34534\n  }]\n}, {\n  type: \'restaurant\',\n  offers: [{\n    id: \'12\',\n    title: \'Upgrade to a business class\',\n    price: 34534\n  }]\n}];\n\n// function getRandomOffersMock() {\n//   return getRandomArrayElement(offersMock);\n// }\n\n\n;// CONCATENATED MODULE: ./src/model/offers-model.js\n\nclass OffersModel {\n  #offers = [];\n  constructor() {\n    this.#offers = offersMock;\n  }\n  get() {\n    return this.#offers;\n  }\n  getByType(type) {\n    return this.#offers.find(offers => offers.type === type) || null;\n  }\n}\n;// CONCATENATED MODULE: ./src/main.js\n\n\n\n\n\n\n\n\nconst tripMainElement = document.querySelector(\'.trip-main\');\nconst tripControlsFilters = document.querySelector(\'.trip-controls__filters\');\nconst tripEvents = document.querySelector(\'.trip-events\');\nconst eventPointsModel = new EventPointsModel();\nconst editPointModel = new EditPointModel();\nconst destinationModel = new DestinationModel();\nconst offersModel = new OffersModel();\nconst eventsPresenter = new EventsPresenter({\n  container: tripEvents,\n  eventPointsModel,\n  editPointModel,\n  destinationModel,\n  offersModel\n});\nconst filtersPresenter = new FiltersPresenter({\n  container: tripControlsFilters\n});\nconst headerInfoPresenter = new HeaderInfoPresenter({\n  container: tripMainElement,\n  place: RenderPosition.AFTERBEGIN\n});\neventsPresenter.init();\nfiltersPresenter.init();\nheaderInfoPresenter.init();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///611\n')},484:function(module){eval('!function(t,e){ true?module.exports=e():0}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",c="month",f="quarter",h="year",d="date",l="Invalid Date",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},g="en",D={};D[g]=M;var p="$isDayjsObject",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if("string"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split("-");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v="set"+(this.$u?"UTC":"");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+"Hours",0);case u:return $(v+"Minutes",1);case s:return $(v+"Seconds",2);case i:return $(v+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f="set"+(this.$u?"UTC":""),l=(n={},n[a]=f+"Date",n[d]=f+"Date",n[c]=f+"Month",n[h]=f+"FullYear",n[u]=f+"Hours",n[s]=f+"Minutes",n[i]=f+"Seconds",n[r]=f+"Milliseconds",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,"0")},$=f||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case"YY":return String(e.$y).slice(-2);case"YYYY":return b.s(e.$y,4,"0");case"M":return a+1;case"MM":return b.s(a+1,2,"0");case"MMM":return h(n.monthsShort,a,c,3);case"MMMM":return h(c,a);case"D":return e.$D;case"DD":return b.s(e.$D,2,"0");case"d":return String(e.$W);case"dd":return h(n.weekdaysMin,e.$W,o,2);case"ddd":return h(n.weekdaysShort,e.$W,o,3);case"dddd":return o[e.$W];case"H":return String(s);case"HH":return b.s(s,2,"0");case"h":return d(1);case"hh":return d(2);case"a":return $(s,u,!0);case"A":return $(s,u,!1);case"m":return String(u);case"mm":return b.s(u,2,"0");case"s":return String(e.$s);case"ss":return b.s(e.$s,2,"0");case"SSS":return b.s(e.$ms,3,"0");case"Z":return i}return null}(t)||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",c],["$y",h],["$D",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///484\n')}},__webpack_module_cache__={};function __webpack_require__(t){var l=__webpack_module_cache__[t];if(void 0!==l)return l.exports;var n=__webpack_module_cache__[t]={exports:{}};return __webpack_modules__[t].call(n.exports,n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=t=>{var l=t&&t.__esModule?()=>t.default:()=>t;return __webpack_require__.d(l,{a:l}),l},__webpack_require__.d=(t,l)=>{for(var n in l)__webpack_require__.o(l,n)&&!__webpack_require__.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:l[n]})},__webpack_require__.o=(t,l)=>Object.prototype.hasOwnProperty.call(t,l);var __webpack_exports__=__webpack_require__(611)})();